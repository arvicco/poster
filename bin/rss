#!/usr/bin/env ruby
# Script to repost feed news item to bitcointalk
#
# Usage: rss num [board]

lib = File.expand_path('../../lib', __FILE__)
tmp = File.expand_path('../../tmp', __FILE__)
config_file = File.expand_path('../../config/poster.yml', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'bundler/setup'
require 'poster'
require 'yaml'
require 'pp'

include Poster::Encoding
OpenSSL::SSL::VERIFY_PEER = OpenSSL::SSL::VERIFY_NONE
CATEGORIES_TO_BOARDS = { 
  'Россия' => [:ru, :ru_politics],
  'Политика' => :ru_politics,
  'Майнинг' => :ru_miners,
  'Законы' => :ru_law,
  'Налоги' => :ru_law,
  'Альткойны' => :ru_alt,
  'Разработчикам' => :ru_coders,
  'Новичкам' => :ru,
  'Инвестиции' => :ru_traders,
  'Курс' => :ru_traders,
}


num = (ARGV.first || 0).to_i # Number of news item in feed
config = YAML.load_file(config_file)[:dev]

# Extract news item data
news = Poster::Rss.new config[:zapier_feed]
title, link, img, text, categories = news.extract_data news.feed.items[num]

# Define forum boards to post to
boards = 
  case ARGV[1]
  when nil
    ([:ru_news, :ru_noobs, :trash] +
     categories.map {|c| CATEGORIES_TO_BOARDS[c]}).flatten.compact.uniq 
  else
    [ARGV[1].to_sym]
  end

# p t
# pp t
# p t.force_encoding('ASCII-8BIT')
# p "с, он с".force_encoding('ASCII-8BIT')
# a = %W[\xC2\xA0 \x20]
# p a
# p a[1]
# p a[1].force_encoding('ASCII-8BIT')
# p "\xC2\xA0".force_encoding('ASCII-8BIT')

# t = text.match(/с,...../)[0]
# t1 = "с, он с"
# p xml_encode(t)
# p xml_encode(t1)
# p xml_encode(t).force_encoding('ASCII-8BIT')
# p xml_encode(t1).force_encoding('ASCII-8BIT')
# p CONVERTIBLES.keys.last
# t.each_char {|c| p c}
# t1.each_char {|c| p c}

# exit

bitcointalk = Poster::Forum.new config[:bitcointalk]

boards.each do |board|
  puts "Posting to #{board}"
  bitcointalk.new_topic \
    board: board,
    subj: title, 
    msg:  "#{link}\n" +
    (img ? "[img width=345]#{img}[/img]\n" : "") +
    "[quote]#{text}[/quote]\n"
  sleep 45
end
# File.open("#{tmp}/feed.html", 'w+') {|f| f.write(resp.body) }
